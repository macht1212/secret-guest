"""fix roles and add info to user

Revision ID: fb7971b0ee4c
Revises: 7a9b78abdb27
Create Date: 2025-09-28 15:44:20.314266

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "fb7971b0ee4c"
down_revision: Union[str, None] = "7a9b78abdb27"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("user_roles", sa.Column("id", sa.Integer(), nullable=False))
    op.alter_column(
        "user_roles",
        "role",
        existing_type=postgresql.ENUM(
            "TRAVELER", "HOTEL_OWNER", "ADMIN", name="userrole"
        ),
        type_=sa.String(length=20),
        existing_nullable=False,
    )
    op.add_column(
        "users", sa.Column("city", sa.String(length=20), nullable=True)
    )
    op.add_column(
        "users", sa.Column("country", sa.String(length=20), nullable=True)
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("users", "country")
    op.drop_column("users", "city")
    op.alter_column(
        "user_roles",
        "role",
        existing_type=sa.String(length=20),
        type_=postgresql.ENUM(
            "TRAVELER", "HOTEL_OWNER", "ADMIN", name="userrole"
        ),
        existing_nullable=False,
    )
    op.drop_column("user_roles", "id")
    # ### end Alembic commands ###
