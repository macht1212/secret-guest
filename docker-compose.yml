services:
  postgres:
    image: postgres:17-alpine
    container_name: db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-net

  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_ROOT_HOST: ${MINIO_ROOT_HOST}
      MINIO_ROOT_PORT: ${MINIO_ROOT_PORT}
    ports:
      - "9002:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - app-net

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: backend_app
    environment:

      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_ROOT_HOST: ${MINIO_ROOT_HOST}
      MINIO_ROOT_PORT: ${MINIO_ROOT_PORT}
      
      ALGORITHM: ${ALGORITHM}
      SECRET_KEY: ${SECRET_KEY:-your-secret-key-here}
    expose:
      - "8080"
    volumes:
      - .:/app
    depends_on:
      - postgres
      - minio
    networks:
      - app-net

  nginx:
    image: nginx:alpine
    container_name: nginx_app
    ports:
      - "8080:8080"
    volumes:
      - ./frontend:/usr/share/nginx/html:ro
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
    networks:
      - app-net

volumes:
  pg_data:
  minio_data:

networks:
  app-net:
    driver: bridge
